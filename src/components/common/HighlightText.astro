---
import { t } from 'i18next';

const { translateKey, className, highlightClassName } = Astro.props;

const value = t(`${translateKey}.content`);
const indexArray = t(`${translateKey}.highlightIndexes`)
  .split(', ')
  .map((item) => Number(item));
const newLineArray = t(`${translateKey}.newLineIndexes`)
  .split(', ')
  .map((item) => Number(item));

// Split by space and slash, but preserve '/'' in 'world map'
const words: string[] = value.split(/(\s+|\/)/).reduce((acc, part, index, arr) => {
  if (part === '/' && arr[index - 1] === 'world' && arr[index + 1] === 'map') {
    acc[acc.length - 1] += part + arr[index + 1]; // Append '/' and 'map' to 'world'
    arr[index + 1] = ''; // Mark 'map' as processed
  } else if (part !== '') {
    acc.push(part);
  }
  return acc;
}, [] as string[]);
---

<div class={className}>
  {
    words.map((word, index) => (
      <>
        {indexArray.includes(index) ? <span class={highlightClassName}>{word}</span> : word}
        {newLineArray?.includes(index) && <br />}
      </>
    ))
  }
  <slot />
</div>

---
import { Icon } from 'astro-icon/components';
import Logo from '~/components/Logo.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';

import { trimSlash, getAsset } from '~/utils/permalinks';
import type { CallToAction } from '~/types';
import i18next, { t } from 'i18next';
import { NAV_LINKS, NAV_LINKS_MAP } from '~/constants/commons';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<CallToAction>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const { lang } = Astro.params;
await i18next.changeLanguage(lang);

const {
  id = 'header',
  actions = [],
  isSticky = false,
  isDark = false,
  showRssFeed = false,
  position = 'right',
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    { relative: !isSticky, dark: isDark, 'sticky lg:top-0 z-[100] lg:visible !bg-black lg:!bg-transparent': isSticky },
    'top-0 absolute z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-all ease-in-out',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
  <div
    class:list={[
      'relative text-default py-3 px-3 lg:px-6 mx-auto w-full !bg-nav',
      {
        'lg:flex lg:justify-between': position !== 'center',
      },
      {
        'lg:grid lg:grid-cols-3 lg:items-center': position === 'center',
      },
    ]}
  >
    <div class:list={[{ 'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right' }, 'flex justify-between ml-5']}>
      <a class="flex items-center" href={NAV_LINKS_MAP.HOME.href}>
        <Logo />
      </a>
      <div class="flex items-center lg:hidden">
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full lg:w-auto hidden lg:flex lg:mx-5 text-default overflow-y-auto overflow-x-hidden lg:overflow-y-visible lg:overflow-x-auto lg:justify-self-center"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col lg:flex-row lg:self-center w-full lg:w-auto text-xl lg:text-[0.9375rem] tracking-[0.01rem] font-medium lg:justify-center"
      >
        {
          NAV_LINKS.map(({ text, href }) => (
            <li>
              <a
                class:list={[
                  'hover:underline dark:hover:text-white text-orange-500 px-4 py-1 flex items-center whitespace-nowrap uppercase',
                  { 'aw-link-active': href === currentPath },
                ]}
                href={href}
              >
                {t(text)}
              </a>
            </li>
          ))
        }
        <li class="my-2 mx-4 block lg:hidden">
          <a class="btn" href={NAV_LINKS_MAP.CONTACT.href}>{t('navigation.button')}</a>
        </li>
      </ul>
    </nav>
    <div
      class:list={[
        { 'ml-auto rtl:ml-0 rtl:mr-auto': position === 'left' },
        'hidden lg:self-center lg:flex items-center lg:mb-0 fixed w-full lg:w-auto lg:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 lg:p-0 lg:justify-self-end',
      ]}
    >
      <div class="items-center flex justify-between w-full lg:w-auto">
        <div class="flex">
          {
            showRssFeed && (
              <a
                class="text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                aria-label="RSS Feed"
                href={getAsset('/rss.xml')}
              >
                <Icon name="tabler:rss" class="w-5 h-5" />
              </a>
            )
          }
        </div>
        {
          actions?.length ? (
            <span class="ml-4 rtl:ml-0 rtl:mr-4">
              {actions.map((btnProps) => (
                <Button {...btnProps} class="ml-2 py-2.5 px-5.5 lg:px-6 font-semibold shadow-none text-sm w-auto" />
              ))}
            </span>
          ) : (
            ''
          )
        }
        <a class="btn hidden lg:block" href={NAV_LINKS_MAP.CONTACT.href}>{t('navigation.button')}</a>
      </div>
    </div>
  </div>
</header>
